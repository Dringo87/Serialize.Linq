//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Serialize.Linq.Examples.WcfClientWithServiceReference.PersonServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EL", Namespace="http://schemas.datacontract.org/2004/07/Serialize.Linq.Nodes", ItemName="E")]
    [System.SerializableAttribute()]
    public class EL : System.Collections.Generic.List<Serialize.Linq.Nodes.ExpressionNode> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EIL", Namespace="http://schemas.datacontract.org/2004/07/Serialize.Linq.Nodes", ItemName="EI")]
    [System.SerializableAttribute()]
    public class EIL : System.Collections.Generic.List<Serialize.Linq.Nodes.ElementInitNode> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MBL", Namespace="http://schemas.datacontract.org/2004/07/Serialize.Linq.Nodes", ItemName="MB")]
    [System.SerializableAttribute()]
    public class MBL : System.Collections.Generic.List<Serialize.Linq.Nodes.MemberBindingNode> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tE", Namespace="http://schemas.datacontract.org/2004/07/Serialize.Linq.Nodes")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.ParameterExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.TypeBinaryExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.UnaryExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.BinaryExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.ConditionalExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.ConstantExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.InvocationExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.LambdaExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.ListInitExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.MemberExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.MemberInitExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.NewExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.MethodCallExpressionNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Serialize.Linq.Nodes.NewArrayExpressionNode))]
    public partial class tE : Serialize.Linq.Nodes.ExpressionNode, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MIL", Namespace="http://schemas.datacontract.org/2004/07/Serialize.Linq.Nodes", ItemName="MI")]
    [System.SerializableAttribute()]
    public class MIL : System.Collections.Generic.List<Serialize.Linq.Nodes.MemberInfoNode> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PersonServiceReference.IPersonService")]
    public interface IPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetAllPersons", ReplyAction="http://tempuri.org/IPersonService/GetAllPersonsResponse")]
        Serialize.Linq.Examples.WcfContracts.Entities.Person[] GetAllPersons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetAllPersons", ReplyAction="http://tempuri.org/IPersonService/GetAllPersonsResponse")]
        System.Threading.Tasks.Task<Serialize.Linq.Examples.WcfContracts.Entities.Person[]> GetAllPersonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/FindPersons", ReplyAction="http://tempuri.org/IPersonService/FindPersonsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Examples.WcfClientWithServiceReference.PersonServiceReference.tE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.ParameterExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.TypeBinaryExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.UnaryExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.BinaryExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.ConditionalExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.ConstantExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.InvocationExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.LambdaExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.ListInitExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.MemberExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.MemberInitExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.NewExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.MethodCallExpressionNode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Serialize.Linq.Nodes.NewArrayExpressionNode))]
        Serialize.Linq.Examples.WcfContracts.Entities.Person[] FindPersons(Serialize.Linq.Nodes.ExpressionNode query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/FindPersons", ReplyAction="http://tempuri.org/IPersonService/FindPersonsResponse")]
        System.Threading.Tasks.Task<Serialize.Linq.Examples.WcfContracts.Entities.Person[]> FindPersonsAsync(Serialize.Linq.Nodes.ExpressionNode query);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceChannel : Serialize.Linq.Examples.WcfClientWithServiceReference.PersonServiceReference.IPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceClient : System.ServiceModel.ClientBase<Serialize.Linq.Examples.WcfClientWithServiceReference.PersonServiceReference.IPersonService>, Serialize.Linq.Examples.WcfClientWithServiceReference.PersonServiceReference.IPersonService {
        
        public PersonServiceClient() {
        }
        
        public PersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Serialize.Linq.Examples.WcfContracts.Entities.Person[] GetAllPersons() {
            return base.Channel.GetAllPersons();
        }
        
        public System.Threading.Tasks.Task<Serialize.Linq.Examples.WcfContracts.Entities.Person[]> GetAllPersonsAsync() {
            return base.Channel.GetAllPersonsAsync();
        }
        
        public Serialize.Linq.Examples.WcfContracts.Entities.Person[] FindPersons(Serialize.Linq.Nodes.ExpressionNode query) {
            return base.Channel.FindPersons(query);
        }
        
        public System.Threading.Tasks.Task<Serialize.Linq.Examples.WcfContracts.Entities.Person[]> FindPersonsAsync(Serialize.Linq.Nodes.ExpressionNode query) {
            return base.Channel.FindPersonsAsync(query);
        }
    }
}
